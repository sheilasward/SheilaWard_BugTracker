@using Microsoft.AspNet.Identity;
@using SheilaWard_BugTracker.Helpers;
@using SheilaWard_BugTracker.Models;
@model ToDo

@{

    var ticketHelper = new TicketDecisionHelper();
    var projectHelper = new ProjectsHelper();
    var notfHelper = new NotificationHelper();
    ApplicationDbContext db = new ApplicationDbContext();
    var userId = User.Identity.GetUserId();
}

<section class="content-header">
    <h1>
        Dashboard
        <small>Control panel</small>
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-aqua">
                <div class="inner">
                    @{
                        var ticketCount = @ticketHelper.GetTicketCount("New/Unassigned") + @ticketHelper.GetTicketCount("Active/Assigned");
                        <h3>@ticketCount</h3>
                    }
                    <p>TICKETS IN PROGRESS</p>
                </div>
                <div class="icon">
                    <i class="ion ion-bug"></i>
                </div>
                <a href="@Url.Action("Index", "Tickets", new { proj = "MyTickets", stat = "InProg"})" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-green">
                <div class="inner">
                    <h3>@projectHelper.CountUserProjects()</h3>

                    <p>PROJECTS IN PROGRESS</p>
                </div>
                <div class="icon">
                    <i class="ion ion-lightbulb"></i>
                </div>
                <a href="@Url.Action("Index", "Projects", new { proj = "MyProjects" })" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-yellow">
                <div class="inner">
                    @{
                        var usersOnMyProjectsCount = projectHelper.UsersOnMyProjectsCount(userId);
                        <h3>@usersOnMyProjectsCount</h3>
                    }
                    <p>USERS ON MY PROJECTS</p>
                </div>
                <div class="icon">
                    <i class="ion ion-person"></i>
                </div>
                <a href="@Url.Action("UsersOnMyProjects", "Admin")" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-red">
                <div class="inner">
                    <h3>@notfHelper.GetAllUserNotificationCount()</h3>

                    <p>NOTIFICATIONS</p>
                </div>
                <div class="icon">
                    <i class="ion ion-ios-bell"></i>
                </div>
                <a href="@Url.Action("MyNotifications", "TicketNotifications")" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <!-- ./col -->
    </div>
    <!-- /.row -->

    <hr class="hr-primary" />

    <!-- Graph row -->
    <div class="row">
        <div class="col-md-4">
            <canvas id="myChart" height="200"></canvas>
        </div>

        <!-- DONUT CHART -->
        <div class="col-md-4">
            <canvas id="pieChart" style="height:200px"></canvas>
        </div>

        @if (!User.IsInRole("Developer"))
        {
            <div class="col-md-4">
                <canvas id="myActiveDevs" height="200"></canvas>
            </div>
        }
        else
        {
            <!-- DONUT CHART -->
            <div class="col-md-4">
                <canvas id="ticketPriorities" style="height:200px"></canvas>
            </div>
        }
    <!-- /.Graph row -->
    </div>
    <br />
    <hr class="hr-primary" />
    <br />

    <!-- Main row -->
    <div class="row">
        <!-- Left Column -->
        <div class="col-md-5">
            <!-- TO DO List -->
            <div class="box box-primary box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">To Do List</h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                    <!-- /.box-tools -->
                </div>
                <!-- /.box-header -->
                <div class="box-body">

                    <!-- See dist/js/pages/dashboard.js to activate the todoList plugin -->
                    <ul class="todo-list">
                        @if (ViewBag.ToDoList != null)
                        {
                            foreach (var toDo in ViewBag.ToDoList)
                            {
                                <li>
                                    <!-- drag handle -->
                                    <span class="handle">
                                        <i class="fa fa-ellipsis-v"></i>
                                        <i class="fa fa-ellipsis-v"></i>
                                    </span>

                                    <!-- checkbox -->
                                    @if (toDo.GrayedOut)
                                    {
                                        <input class="chkbox" type="checkbox" value="checked">
                                    }
                                    else
                                    {
                                        <input class="chkbox" type="checkbox" value="">
                                    }
                                    <!-- todo text -->
                                    <span class="text">@toDo.Task</span>
                                    <!-- Emphasis label -->
                                    <small class="label @toDo.Color"><i class="fa fa-clock-o"></i> @toDo.WordDiff</small>
                                    <!-- General tools such as edit or delete-->
                                    <div class="tools">
                                        @using (Html.BeginForm("Delete", "ToDoes", new { id = @toDo.Id }, FormMethod.Post))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.Hidden("UserId", userId)
                                            <i class="fa fa-trash-o"></i>
                                        }
                                    </div>
                                </li>
                            }
                        }

                    </ul>
                </div>
                <!-- /.box-body -->
                <div class="box-footer clearfix no-border">
                   @using (Html.BeginForm("Create", "ToDoes", FormMethod.Post, new { id = "createToDo" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("UserId", userId)
                    <div class="row">
                        <div class="col-md-4">
                            <input style="height:35px;" id="to-do-text" required name="Task" type="text" placeholder=" Type new To-Do" />
                        </div>
                        <div class="col-md-4">
                            <input style="height:35px;" class="flatpickr flatpickr-input" type="datetime" name="Due" data-id="datetime" id="datetime" placeholder=" When Due?" readonly="readonly">
                        </div>

                        <div class="col-md-4">
                            <div class="input-group">
                                <select id="bg-color" class="label-default" name="Color" style="height:35px; border: 1px solid gray;">
                                    <option value="label-default" class="">Default</option>
                                    <option value="label-danger" class="label-danger">Red</option>
                                    <option value="label-info" class="label-info">Aqua</option>
                                    <option value="label-primary" class="label-primary">Blue</option>
                                    <option value="label-success" class="label-success">Green</option>
                                    <option value="label-warning" class="label-warning">Yellow</option>
                                </select>
                                <button id="addToDo" class="btn-primary" style="height:35px; border:1px solid gray; margin-right:0;"> Add item</button>
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>
            <!-- /.box -->
        </div>
        <!-- /.Left Column-->

        <!-- Right Column -->
        <div class="col-md-7">
            <div class="col-lg-3">
                <div class="box box-primary box-solid">
                    <div class="box-header with-border">
                        <h4 class="box-title">Draggable Events</h4>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                        <!-- /.box-tools -->
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <!-- the events -->
                        <div id="external-events">
                            <div class="external-event bg-green">Lunch</div>
                            <div class="external-event bg-yellow">Go home</div>
                            <div class="external-event bg-aqua">Do homework</div>
                            <div class="external-event bg-light-blue">Work on UI design</div>
                            <div class="external-event bg-red">Sleep tight</div>
                            <div class="checkbox">
                                <label for="drop-remove">
                                    <input type="checkbox" id="drop-remove">
                                    remove after drop
                                </label>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /. box -->

                <div class="box box-primary box-solid">
                    <div class="box-header with-border">
                        <h4 class="box-title">Create Events</h4>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                        <!-- /.box-tools -->
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <div class="btn-group" style="width: 100%; margin-bottom: 10px;">
                            <!--<button type="button" id="color-chooser-btn" class="btn btn-info btn-block dropdown-toggle" data-toggle="dropdown">Color <span class="caret"></span></button>-->
                            <ul class="fc-color-picker" id="color-chooser">
                                <li><a class="text-aqua" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-blue" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-light-blue" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-teal" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-yellow" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-orange" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-green" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-lime" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-red" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-purple" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-fuchsia" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-muted" href="#"><i class="fa fa-square"></i></a></li>
                                <li><a class="text-navy" href="#"><i class="fa fa-square"></i></a></li>
                            </ul>
                        </div>
                        <!-- /btn-group -->
                        <div class="input-group" style="width: 100%;">
                            <input id="new-event" type="text" class="form-control" placeholder="Event Title">

                            <div class="input-group-btn">
                                <button id="add-new-event" type="button" class="btn btn-primary btn-flat">Add</button>
                            </div>
                            <!-- /btn-group -->
                        </div>
                        <!-- /input-group -->
                    </div>
                </div>
            </div>
            <!-- /.col -->

            <div class="col-lg-9">
                <!-- Calendar -->
                <div class="box box-primary box-solid">
                    <div class="box-header with-border">
                        <h3 class="box-title">Calendar</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                        <!-- /.box-tools -->
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <!-- THE CALENDAR -->
                        <div id="calendar"></div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /. box -->
            </div>
            <!-- /.Calendar Column -->
        </div>
        <!-- /.Right Column -->

    </div>
    <!-- /.row (main row) -->

</section>

@section scripts
        {
    @*<script>
            new Morris.Bar({
                element: 'HardCodedMorrisBarChart1',
                gridTextSize: 8,
                xLabelAngle: 45,
                data: [
                    { label: 'New/Unassigned', value: 20 },
                    { label: 'Active/Assigned', value: 50 },
                    { label: 'Inactive', value: 5 },
                    { label: 'Completed', value: 150 },
                    { label: 'Archived', value: 200 },
                ],
                xkey: 'label',
                ykeys: ['value'],
                labels: ['Ticket Count'],
                resize: true
            });
        </script>

        <script type="text/javascript">
            $(function () {
                $.post('@Url.Action("GetHardCodedMorrisBarData", "Charts")').then(function (response) {
                    new Morris.Bar({
                        element: 'HardCodedMorrisBarChart2',
                        data: response,
                        xkey: 'label',
                        ykeys: ['value'],
                        labels: ['Ticket Count'],
                        resize: true
                    });
                });
            });
        </script>

        <script type="text/javascript">
            $(function () {
                $.post('@Url.Action("GetRealMorrisData", "Charts")').then(function (response) {
                    new Morris.Bar({
                        element: 'RealMorrisBarChart',
                        data: response,
                        gridTextSize: 10,
                        xLabelAngle: 65,
                        xkey: 'label',
                        ykeys: ['value'],
                        labels: ['Ticket Count'],
                        resize: true
                    });
                });
            });
        </script>

        <script type="text/javascript">
            $(function () {
                $.post('@Url.Action("GetRealMorrisData", "Charts")').then(function (response) {
                    new Morris.Donut({
                        element: 'RealMorrisDonutChart',
                        data: response,
                        gridTextSize: 10,
                        xkey: 'label',
                        ykeys: ['value'],
                        labels: ['Ticket Count'],
                        resize: true
                    });
                });
            });

        </script>*@


    <script>
        // jQuery UI sortable for the todo list
        var dueColor = "label-default";
        $('.todo-list').sortable({
            placeholder: 'sort-highlight',
            handle: '.handle',
            forcePlaceholderSize: true,
            zIndex: 999999
        });

        $('.todo-list').todoList({
            onCheck: function () {
                window.console.log($(this), 'The element has been checked');
            },
            onUnCheck: function () {
                window.console.log($(this), 'The element has been unchecked');
            }
        });

        $('.todo-list').on("click", ".fa-trash-o", function (e) {
            $(this).closest("form").submit(); 
            $(this).closest("li").fadeOut(500, function () {
                $(this).remove();
            });
            e.stopPropagation();
        });

        $('#addToDo').click(function () {
            $('#createToDo').submit();
            var todoText = $("#to-do-text").val();
            $("#to-do-text").val("");
            var todoDue = $("#to-do-due").val();
            $("#to-do-due").val("");
            $('ul.todo-list').append('<li><span class="handle"><i class="fa fa-ellipsis-v"></i> <i class="fa fa-ellipsis-v"></i></span><input type="checkbox" value=""><span class="text">' + todoText + '</span><small class="label ' + dueColor + '"><i class="fa fa-clock-o"></i>&nbsp;' + todoDue + '</small><div class="tools"><i class="fa fa-trash-o"></i></div></li>');
            
        });

        $('#bg-color').on('change', function () {
            $('#bg-color').removeClass();
            $('#bg-color').addClass(this.value);
            dueColor = this.value;
        });
    </script>

    <!-- Page specific script -->
    <script>
        $(function () {

            /* initialize the external events
             -----------------------------------------------------------------*/
            function init_events(ele) {
                ele.each(function () {

                    // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
                    // it doesn't need to have a start or end
                    var eventObject = {
                        title: $.trim($(this).text()) // use the element's text as the event title
                    }

                    // store the Event Object in the DOM element so we can get to it later
                    $(this).data('eventObject', eventObject)

                    // make the event draggable using jQuery UI
                    $(this).draggable({
                        zIndex: 1070,
                        revert: true, // will cause the event to go back to its
                        revertDuration: 0  //  original position after the drag
                    })

                })
            }

            init_events($('#external-events div.external-event'))

            /* initialize the calendar
             -----------------------------------------------------------------*/
            //Date for the calendar events (dummy data)
            var date = new Date()
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear()
            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                buttonText: {
                    today: 'today',
                    month: 'month',
                    week: 'week',
                    day: 'day'
                },
                //Random default events
                events: [
                    //{
                    //    title: 'All Day Event',
                    //    start: new Date(y, m, 1),
                    //    backgroundColor: '#f56954', //red
                    //    borderColor: '#f56954' //red
                    //},
                    {
                        title: 'Long Event',
                        start: new Date(y, m, d - 5),
                        end: new Date(y, m, d - 2),
                        backgroundColor: '#f39c12', //yellow
                        borderColor: '#f39c12' //yellow
                    },
                    {
                        title: 'Meeting',
                        start: new Date(y, m, d, 10, 30),
                        allDay: false,
                        backgroundColor: '#0073b7', //Blue
                        borderColor: '#0073b7' //Blue
                    },
                    {
                        title: 'Lunch',
                        start: new Date(y, m, d, 12, 0),
                        end: new Date(y, m, d, 14, 0),
                        allDay: false,
                        backgroundColor: '#00c0ef', //Info (aqua)
                        borderColor: '#00c0ef' //Info (aqua)
                    },
                    {
                        title: 'Birthday Party',
                        start: new Date(y, m, d + 1, 19, 0),
                        end: new Date(y, m, d + 1, 22, 30),
                        allDay: false,
                        backgroundColor: '#00a65a', //Success (green)
                        borderColor: '#00a65a' //Success (green)
                    },
                    {
                        title: 'Click for Google',
                        start: new Date(y, m, 28),
                        end: new Date(y, m, 29),
                        url: 'http://google.com/',
                        backgroundColor: '#3c8dbc', //Primary (light-blue)
                        borderColor: '#3c8dbc' //Primary (light-blue)
                    }
                ],
                editable: true,
                droppable: true, // this allows things to be dropped onto the calendar !!!
                drop: function (date, allDay) { // this function is called when something is dropped

                    // retrieve the dropped element's stored Event Object
                    var originalEventObject = $(this).data('eventObject')

                    // we need to copy it, so that multiple events don't have a reference to the same object
                    var copiedEventObject = $.extend({}, originalEventObject)

                    // assign it the date that was reported
                    copiedEventObject.start = date
                    copiedEventObject.allDay = allDay
                    copiedEventObject.backgroundColor = $(this).css('background-color')
                    copiedEventObject.borderColor = $(this).css('border-color')

                    // render the event on the calendar
                    // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                    $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)

                    // is the "remove after drop" checkbox checked?
                    if ($('#drop-remove').is(':checked')) {
                        // if so, remove the element from the "Draggable Events" list
                        $(this).remove()
                    }

                }
            })

            /* ADDING EVENTS */
            var currColor = '#3c8dbc' //Red by default
            //Color chooser button
            var colorChooser = $('#color-chooser-btn')
            $('#color-chooser > li > a').click(function (e) {
                e.preventDefault()
                //Save color
                currColor = $(this).css('color')
                //Add color effect to button
                $('#add-new-event').css({ 'background-color': currColor, 'border-color': currColor })
            })
            $('#add-new-event').click(function (e) {
                e.preventDefault()
                //Get value and make sure it is not null
                var val = $('#new-event').val()
                if (val.length == 0) {
                    return
                }

                //Create events
                var event = $('<div />')
                event.css({
                    'background-color': currColor,
                    'border-color': currColor,
                    'color': '#fff'
                }).addClass('external-event')
                event.html(val)
                $('#external-events').prepend(event)

                //Add draggable funtionality
                init_events(event)

                //Remove event from text input
                $('#new-event').val('')
            })
        })
    </script>

    <script>
        $.post('@Url.Action("GetTicketsPercentDone", "Charts")').then(function (response) {
            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: response.Labels,
                datasets: [{
                    label: '% Done',
                    data: response.Values,
                    backgroundColor: [
                        'rgb(60,141,188)',
                        'rgb(243,156,17)',
                        'rgb(0,166,90)',
                        'rgb(221,76,57)',
                        'rgb(210,214,223)',
                        'rgb(0,192,239)',
                        'rgb(60,141,188)',
                        'rgb(243,156,17)',
                        'rgb(0,166,90)',
                        'rgb(221,76,57)',
                        'rgb(210,214,223)',
                        'rgb(0,192,239)'
                    ]
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                title: {
                        display: true,
                        text: 'My Active Tickets'
                }
            }
        });
    });
    </script>

    <script>
        $.post('@Url.Action("GetTicketStatusData", "Charts")').then(function (response) {
            var ctx = document.getElementById('pieChart').getContext('2d');
            var pieChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: response.Labels,
                    datasets: [{
                        label: '',
                        data: response.Values,
                        backgroundColor: [
                            'rgb(60,141,188)',
                            'rgb(243,156,17)',
                            'rgb(0,166,90)',
                            'rgb(221,76,57)',
                            'rgb(0, 192, 239)',
                            'rgb(210, 214, 223)'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'My Ticket Statuses'
                    },
                    animation: {
                        animateScale: true,
                        animateRotate: true,
                        animationSteps: 100,
                        animationEasing: 'easeOutBounce',
                    }
                }
            });
        });

    </script>

    <script>
        $.post('@Url.Action("GetTicketPriorityData", "Charts")').then(function (response) {
            var ctx = document.getElementById('ticketPriorities').getContext('2d');
            var pieChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: response.Labels,
                    datasets: [{
                        label: '',
                        data: response.Values,
                        backgroundColor: [
                            'rgb(60,141,188)',
                            'rgb(243,156,17)',
                            'rgb(0,166,90)',
                            'rgb(221,76,57)',
                            'rgb(153, 102, 255)'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'My Ticket Priorities'
                    },
                    animation: {
                        animateScale: true,
                        animateRotate: true,
                        animationSteps: 100,
                        animationEasing: 'easeOutBounce',
                    }
                }
            });
        });

    </script>

    <script>
        $.post('@Url.Action("GetTicketsAssignedToDevs", "Charts")').then(function (response) {
            var ctx = document.getElementById('myActiveDevs').getContext('2d');
            var myActiveDevs = new Chart(ctx, {
                type: 'bar',
                data:
                {
                    labels: response.Labels,
                    datasets: [
                        {
                            label: "Active",
                            backgroundColor: "rgb(60,141,188)",
                            data: response.ValueActive
                        },
                        {
                            label: "Completed",
                            backgroundColor: "rgb(0,166,90)",
                            data: response.ValueComplete
                        }]
                },
                options:
                {
                    title:
                    {
                        display: true,
                        text: '# Tickets Assigned To Developers on My Projects'
                    }
                }
            });
        });
    </script>

    @*<script>
        $("#datetime").click(function () {
            var today = new Date();
            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();
            var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
            var currDateTime = date + ' ' + time;
            
        });
    </script>*@


        @*$.post('@Url.Action("GetTicketsCompletedByDevs", "Charts")').then(function (response) {*@
        //new Chart(document.getElementById("line-chart"), {
        //    type: 'line',
        //    data:
        //    {
        //        labels: ["JUN 2019", "JUL 2019", "AUG 2019", "SEP 2019"],
        //        datasets:
        //        [
        //            {
        //                data: response.numTicketsCompleted,
        //                label: response.Developers,
        //                fill: false,
        //                borderColor:
        //                [
        //                    'rgb(60,141,188)',
        //                    'rgb(243,156,17)',
        //                    'rgb(0,166,90)',
        //                    'rgb(221,76,57)',
        //                    'rgb(153, 102, 255)'
        //                ]
        //            },
        //        ]
        //    },
        //    options:
        //    {
        //        title:
        //        {
        //            display: true,
        //            text: 'Tickets Complete Each Month by Developer(s)'
        //        }
        //    }
        //});


}
